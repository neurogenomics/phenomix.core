% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/iterate_lm.R
\name{iterate_lm}
\alias{iterate_lm}
\title{Iterate linear regression across all combinations of two matrices}
\usage{
iterate_lm(
  xmat,
  ymat,
  test_method = c("glm", "glm_univariate", "anova", "lm.ridge", "rlm"),
  multivariate = FALSE,
  scale_fn = NULL,
  correction_method = "fdr",
  qvalue_thresh = 0.05,
  quantize = list(x = NULL, y = NULL),
  progressbar = TRUE,
  workers = NULL,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{xmat}{gene x trait matrix.}

\item{ymat}{gene x celltype matrix.}

\item{test_method}{Association testing method to use.}

\item{multivariate}{If \code{TRUE}, runs tests with each column in
\code{xmat} as a multivariate predictor in a single model
(one model per column in \code{yvar}). If\code{FALSE},
runs tests with each column in \code{xmat} as a univariate predictor in
separate models (one model per column in \code{yvar}).}

\item{scale_fn}{A function to scale the x and y variables with
before running the regression. This helps to make the coefficients
comparable across different models.
Set to \code{NULL} to skip the scaling step.}

\item{correction_method}{Multiple-testing correction
method to be passed to \link[stats]{p.adjust}.}

\item{qvalue_thresh}{q-value threshold to use when report
significant results summary.}

\item{quantize}{A named list where the values of "x" and "y" indicate the
number of quantiles to bin the respective \code{xmat} and
\code{ymat} datasets into.}

\item{progressbar}{logical(1) Enable progress bar
(based on \code{plyr:::progress_text}).
 Enabling the progress bar changes the default value of tasks to
 \code{.Machine$integer.max}, so that progress is reported for
 each element of X.}

\item{workers}{Number (>1) or proportion (<1) of worker cores to use.}

\item{verbose}{Print messages.}

\item{...}{Additional parameters passed to the statistical test function.}
}
\description{
Iterate linear regression across all combinations 
of columns between two matrices,
for example cell types (\code{xmat}) and phenotypes (\code{ymat}).
}
\examples{
set.seed(42)

### x matrix (e.g. cell type expression specificity signatures)
xmat <- simulate_matrix(nrow = 200, ncol = 10, col_prefix="celltype_")

### y matrix (e.g. gene-phenotype association signatures)
ymat <- simulate_matrix(nrow = 100, ncol = 50, col_prefix="phenotype_") 

res_lm <- iterate_lm(xmat = xmat,
                     ymat = ymat,
                     test_method = "glm_univariate",
                     workers = 1)
}
